<!DOCTYPE html>
<html ng-app="Chat">
  <head>
    <title>GoInstant GoAngular Component Example</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <script>document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>')</script>
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet">
    <link href="gi-banner.css" rel="stylesheet">
    <link href="style.css" rel="stylesheet">
    <link href="inch-worm.css" rel="stylesheet">
    <link rel="stylesheet" href="http://cdn.oesmith.co.uk/morris-0.4.3.min.css">
  </head>
  <body>
    <div class="container" ng-controller="ChatCtrl">
      <h1>GoAngular Getting Started Example Chat</h1>
      <div id="myfirstchart" style="height: 250px;"></div>
      <section id="messages" class="clearfix">
        <div class="table-wrapper">
          <table class="table">
            <tr ng-repeat="message in messages">
              <td class="message-username col-sm-2">
                <span>{{ message.author }}</span>
              </td>
              <td class="message-content col-sm-10">
                <div class="settings">
                  <!--<span class="timestamp">4:19 PM</span>-->
                  <div class="btn-group">
                    <button type="button" class="btn btn-link btn-xs dropdown-toggle" data-toggle="dropdown">
                      <span class="glyphicon glyphicon-chevron-down"></span>
                    </button>
                    <ul class="dropdown-menu">
                      <li><a href="#"><span class="glyphicon glyphicon-edit"></span> Edit</a></li>
                      <li><a href="#"><span class="glyphicon glyphicon-trash"></span> Remove</a></li>
                    </ul>
                  </div>
                </div>
                {{ message.content }}

                <!-- TODO -->
                <!-- Show when editing
                <div class="col-xs-11">
                  <textarea class="form-control" rows="1"></textarea>
                </div>
                <div class="col-xs-1">
                  <button type="button" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-ok"></span></button>
                </div>
                -->
              </td>
            </tr>
          </table>
        </div>
      </section>
      <form role="form" class="well clearfix" ng-submit="sendMessage()">
        <div class="row">
          <div class="col-xs-3">
            <div class="input-group">
              <span class="input-group-addon"><span class="glyphicon glyphicon-user"></span></span>
              <input ng-model="author" class="input input-lg form-control" placeholder="Your Name">
            </div>
          </div>
          <div class="col-xs-7">
            <input ng-model="newMessage" ng-disabled="sendingMessage" placeholder="What's up?" class="input input-lg form-control">
          </div>
          <div class="col-xs-2">
            <button type="submit" class="btn btn-primary btn-lg btn-block">Send</button>
          </div>
        </div>
      </form>
    </div>
    <div id="goinstant-header">
      <ul class="gi-links">
        <li class="gi-logo"><a href="http://www.goinstant.com/" target="_blank"><img src="../img/goinstant-white.png" alt="GoInstant Docs"></a></li>
        <li><a href="http://goinstant.com/signup" target="_blank">Sign up free</a></li>
        <li><a href="https://developers.goinstant.com/v1/GoAngular/index.html" target="_blank">Docs &amp; API</a></li>
      </ul>
      <ul class="gi-social">
        <li class="gi-label">Share with friends:</li>
        <li>
          <a href="https://twitter.com/share" class="twitter-share-button" data-via="goinstant" data-text="Build an easy realtime chat with GoAngular (GoInstant + AngularJS)">Tweet</a>
          <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
        </li>
        <li>
          <div class="g-plusone" data-size="medium"></div>
          <script type="text/javascript">
            (function() {
              var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
              po.src = 'https://apis.google.com/js/platform.js';
              var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
            })();
          </script>
        </li>
      </ul>
    </div>

  <div class="inch-worm" ng-controller="InchwormCtrl">
    <div class="collapse" ng-click="collapsed = !collapsed">
      <span class="title"><em>Inchworm</em></span>
      <div class="pull-right">
        <span id="model-total"><span class="text-muted">total models:</span><span class="label label-info">{{ models | objectLength }}</span></span>
         <span id="model-total"><span class="text-muted">average request duration:</span><span class="label label-info">{{ models  | totalAverageDuration | number:2 }} ms</span></span>
      </div>
    </div>
    <div class="wrapper" ng-show="!collapsed">
      <div class="models">
        <ul>
          <li ng-repeat="(key, model) in models">
          <span class="name">{{ key }}</span>
            <div class="tab-wrapper">
              <span ng-click="selected = 1"  class="tab">Value</span>
              <span ng-click="selected = 2" class="tab">Profile</span>
            </div>
            <div class="controls">
              <span>Watch</span>
              <span>Sync</span>
              <span>Bind</span>
            </div>
              <div ng-show="selected === 1" class="content">
                <pre>{{ (model.$value || model | json) }}</pre>
              </div>
              <div ng-show="true" class="content">
                <table class="table">
                  <thead>
                    <tr>
                      <th>command</th>
                      <th>call count</th>
                      <th>total duration</th>
                      <th>average</th>
                      <th>min</th>
                      <th>max</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr ng-repeat="(command, profile) in model.$profiler()">
                      <td><span class="label label-danger">{{ command }}</span></td>
                      <td>{{ profile.length  }}</td>
                      <td>{{ profile | totalDuration | number:2 }} ms</td>
                      <td>{{ profile | averageDuration | number:2 }} ms</td>
                      <td>{{ profile | minDuration | number:2 }} ms</td>
                      <td>{{ profile | maxDuration | number:2 }} ms</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            <div>
          </li>
        </ul>
      </div>
    </div>

    <!-- Angular -->
    <script src="bower_components/angular/angular.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>


    <!-- Lodash -->
    <script src="bower_components/lodash/dist/lodash.min.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="http://cdn.oesmith.co.uk/morris-0.4.3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js"></script>


    <!-- Platform -->
    <script src="https://cdn.goinstant.net/v1/platform.min.js"></script>

    <!-- GoAngular -->
    <script src="bower_components/goangular/dist/goangular.js"></script>
    <script>
      angular
        .module('Chat', ['goangular'])
        .config(function($goConnectionProvider) {
          $goConnectionProvider.$set('<%- GOINSTANT_CONNECT_URL %>');
        })
        .filter('totalDuration', function() {
          return function(data) {
            console.log('called')
            if (typeof(data) === 'undefined') {
                return 0;
            }

            return _.reduce(data, function(a, b) {
              return a + b.duration;
            }, 0);
          }
        })
        .filter('totalAverageDuration', function() {
          return function(data) {
            if (typeof(data) === 'undefined') {
                return 0;
            }

            var profiles = _.map(data, function(model) {
              return model.$profiler();
            });

            var sum = 0;
            var duration = 0;
            _.each(profiles, function(profile) {
              _.each(profile, function(command) {
                duration = duration + _.reduce(command, function(a, b) {
                  sum++
                  return a + b.duration;
                }, 0);
              })
            });

            return duration / sum;
          }
        })
        .filter('averageDuration', function() {
          return function(data) {
            if (typeof(data) === 'undefined') {
                return 0;
            }

            return (_.reduce(data, function(a, b) {
              return a + b.duration;
            }, 0) / data.length) || 0;
          }
        })
        .filter('minDuration', function() {
          return function(data) {
            if (typeof(data) === 'undefined') {
                return 0;
            }

            var durations = _.map(data, function(model) {
              return model.duration;
            });

            if (durations.length < 1) {
              return 0;
            }

            return Math.min.apply(null, durations);
          }
        })
        .filter('maxDuration', function() {
          return function(data) {
            if (typeof(data) === 'undefined') {
                return 0;
            }

            var durations = _.map(data, function(model) {
              return model.duration;
            });

            if (durations.length < 1) {
              return 0;
            }

            return Math.max.apply(null, durations);
          }
        })
        .filter('objectLength', function() {
          return function(data) {
            if (typeof(data) === 'undefined') {
                return 0;
            }

           return _.toArray(data).length;
          }
        })
        .controller('ChatCtrl', function($scope, $goKey) {
          $scope.messages = $goKey('messages').$sync();

          //var message = $scope.messages.$key('id-143b143f484-000/content').$sync();
          // message.$on('ready', function() {
          //   console.log(message);
          // })

          new Morris.Bar({
            element: 'myfirstchart',
            data: [
              { y: '2006', a: 100, b: 90 },
              { y: '2007', a: 75,  b: 65 },
              { y: '2008', a: 50,  b: 40 },
              { y: '2009', a: 75,  b: 65 },
              { y: '2010', a: 50,  b: 40 },
              { y: '2011', a: 75,  b: 65 },
              { y: '2012', a: 100, b: 90 }
            ],
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Series A', 'Series B']
          });


          console.log($scope.messages);
          $scope.messages.$on('add', {
            local: true,
            listener: scrollOn
          });

          $scope.messages.$on('ready', scrollOn);

          $scope.sendMessage = function() {
            if(!$scope.newMessage) {
              return;
            }

            $scope.messages.$add({
              content: $scope.newMessage,
              author: $scope.author
            }).then(function() {
              $scope.$apply(function() {
                console.log($scope.messages.$profiler('$add'));
                $scope.newMessage = '';
              });
            });
          }

          window.clearMessages = function() {
            $scope.messages.$remove().then(function() {
              console.log('messages have been cleared from ', '<%- GOINSTANT_CONNECT_URL %>');
            });
          };

          function scrollOn() {
            setTimeout(function() {
              $('.table-wrapper').scrollTop($('.table-wrapper').children().height());
            }, 0);
          }
        }).controller('InchwormCtrl', function($scope) {
          console.log(window.iw.models)
          $scope.models = window.iw.models;
        });
    </script>
  </body>
</html>
